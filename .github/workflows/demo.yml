name: Deploy website
on:
    push:
        branches:
            - main
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Lint code
              run: npm run lint
            - name: Test code
              run: npm run test
    build:
        needs: test
        runs-on: ubuntu-latest
        # if you generate an output you must have the outputs key
        outputs:
          # we can do this because we set the id in the step
          script-file: ${{ steps.publish.outputs.script-file }}
        steps:
            - name: Get code
              uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Build website
              run: npm run build
            # jobs can produce outputs
            - name: Publish JS filename
              # add an id so we can refer to it
              id: publish
              run: find dist/assets/*.js -type f -execdir echo 'script-file=script-file::{}' >> $GITHUB_OUTPUT ';'
            # uploading aftifacts
            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                name: dist-files # name of the folder
                path: dist
                # path: |
                #     dist
                #     package.json
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            # download the artificat uploaded in the build job
            - name: Get build artifacts
              uses: actions/download-artifact@v3
              with:
                name: dist-files
            # this step is just to show me that the 
            # dist-files was indeed downloaded 
            # you will lose the dist-files folder
            # but the contents will exist
            - name: Output contents
              run: ls
            # this is how we can can get the output in another job
            - name: Output filename
              run: echo "${{ needs.build.outputs.script-file }}"
            - name: Deploy
              run: echo "Deploying..."